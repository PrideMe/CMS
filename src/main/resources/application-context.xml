<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:elasticsearch="http://www.springframework.org/schema/data/elasticsearch"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/elasticsearch
       http://www.springframework.org/schema/data/elasticsearch/spring-elasticsearch.xsd">

    <context:component-scan base-package="com.wangjikai">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!-- 数据库配置信息 -->
    <context:property-placeholder location="classpath:db.properties,classpath:mail.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init">
        <!-- 数据库连接的基本属性 自动检测url加载驱动，无需显式配置-->
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 配置SqlSessionFactory -->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.wangjikai.dao"/>
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
    </bean>
    <import resource="classpath:application-shiro.xml"/>
    <!--邮件发送器-->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.host}" />
        <property name="username" value="${mail.username}" />
        <property name="password" value="${mail.password}" />
        <property name="defaultEncoding" value="UTF-8"></property>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
                <prop key="mail.smtp.port">${mail.smtp.port}</prop>
            </props>
        </property>
    </bean>

    <!-- google kaptcha的相关配置-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <!--是否有边框 可选yes 或者 no-->
                        <prop key="kaptcha.border">no</prop>
                        <!--边框颜色,r,g,b (and optional alpha) or white,black,blue. -->
                        <prop key="kaptcha.border.color">red</prop>
                        <!--边框厚度. 值大于0-->
                        <prop key="kaptcha.border.thickness">5</prop>
                        <!--验证码图片的宽度 默认200-->
                        <prop key="kaptcha.image.width">150</prop>
                        <!--验证码图片的宽度 默认50-->
                        <prop key="kaptcha.image.height">34</prop>
                        <!--图片实现类 默认com.google.code.kaptcha.impl.DefaultKaptcha-->
                        <prop key="kaptcha.producer.impl">com.google.code.kaptcha.impl.DefaultKaptcha </prop>
                        <!--文本实现类 默认com.google.code.kaptcha.text.impl.DefaultTextCreator-->
                        <prop key="kaptcha.textproducer.impl">com.google.code.kaptcha.text.impl.DefaultTextCreator</prop>
                        <!--文本集合，验证码值从此集合中获取-->
                        <prop key="kaptcha.textproducer.char.string">abcde2345678gfynmnpwx</prop>
                        <!--验证码文本字符长度  默认为5-->
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <!--验证码文本字体样式-->
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                        <!--字体大小 默认40px-->
                        <prop key="kaptcha.textproducer.font.size">25</prop>
                        <!--文字间隔 默认2-->
                        <prop key="kaptcha.textproducer.char.space">3</prop>
                        <!--字体颜色，合法值： r,g,b  或者 white,black,blue.默认black-->
                        <prop key="kaptcha.textproducer.font.color">blue</prop>
                        <!--干扰实现类 默认com.google.code.kaptcha.impl.DefaultNoise-->
                        <prop key="kaptcha.noise.impl">com.google.code.kaptcha.impl.DefaultNoise </prop>
                        <!--干扰颜色，合法值： r,g,b 或者 white,black,blue.默认black-->
                        <prop key="kaptcha.noise.color">black</prop>
                        <!--图片样式 水纹：WaterRipple 鱼眼：FishEyeGimpy 阴影：ShadowGimpy-->
                        <prop key="kaptcha.obscurificator.impl">com.google.code.kaptcha.impl.ShadowGimpy</prop>
                        <!--背景实现类-->
                        <prop key="kaptcha.background.impl">com.google.code.kaptcha.impl.DefaultBackground</prop>
                        <!--背景颜色渐变，结束颜色-->
                        <prop key="kaptcha.background.clear.to">white</prop>
                        <!--文字渲染器-->
                        <prop key="kaptcha.word.impl">com.google.code.kaptcha.text.impl.DefaultWordRenderer</prop>
                        <!--&lt;!&ndash;The value for the kaptcha is generated and is put into the HttpSession. This is the key value for that item in the session. &ndash;&gt;-->
                        <!--<prop key="kaptcha.session.key">KAPTCHA_SESSION_KEY</prop>-->
                        <!--&lt;!&ndash;The date the kaptcha is generated is put into the HttpSession. This is the key value for that item in the session. &ndash;&gt;-->
                        <!--<prop key="kaptcha.session.date">KAPTCHA</prop>-->
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <elasticsearch:transport-client id="client" cluster-nodes="localhost:9300" cluster-name="elasticsearch" />

    <bean name="elasticsearchTemplate" class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
        <constructor-arg ref="client"/>
    </bean>
</beans>