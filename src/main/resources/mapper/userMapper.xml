<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wangjikai.dao.UserDao">
    <select id="selectByLoginname" resultType="com.wangjikai.domain.User">
        SELECT * FROM `user` WHERE loginname = #{loginname};
    </select>
    <select id="selectUserRolePermission" resultMap="getUserRolePermission">
        SELECT
        u.id,u.loginname,u.username,u.`password`,u.`status`,u.createdate,
        r.id AS rId,r.roleName,r.roleCode,r.description AS rDescription,
        p.id AS pId,p.pCode,p.`name` AS pName,p.description AS pDescription,p.purl
        FROM
        `user` AS u,
        role AS r,
        permission AS p,
        role_permission AS rp,
        user_role AS ur
        WHERE
        u.id = ur.userId
        AND
        r.id = ur.roleId
        AND
        p.id = rp.permissionId
        AND
        r.id = rp.roleId
        AND
        u.loginname = #{loginname} AND u.password = #{password};
    </select>
    <resultMap id="getUserRolePermission" type="com.wangjikai.domain.User">
        <id property="id" column="id"/>
        <result property="loginname" column="loginname"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="createdate" column="createdate"/>
        <collection property="roles" ofType="com.wangjikai.domain.Role">
            <id property="id" column="rId"/>
            <result property="name" column="roleName"/>
            <result property="roleCode" column="roleCode"/>
            <result property="description" column="rDescription"/>
            <collection property="permissions" ofType="com.wangjikai.domain.Permission">
                <id property="id" column="pId"/>
                <result property="pId" column="pId"/>
                <result property="pCode" column="pCode"/>
                <result property="name" column="pName"/>
                <result property="description" column="pDescription"/>
                <result property="purl" column="purl"/>
            </collection>
        </collection>
    </resultMap>
    <resultMap id="getUserRole" type="com.wangjikai.domain.User">
        <id property="id" column="uid"/>
        <result property="loginname" column="loginname"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="status" column="status"/>
        <result property="createdate" column="createdate"/>
        <collection property="roles" ofType="com.wangjikai.domain.Role">
            <id property="id" column="rId"/>
            <result property="name" column="roleName"/>
            <result property="roleCode" column="roleCode"/>
            <result property="description" column="rDescription"/>
        </collection>
    </resultMap>
    <select id="selectById" resultType="com.wangjikai.domain.User" parameterType="Integer">
        SELECT * FROM `user` WHERE `user`.id = #{id}
    </select>
    <delete id="deleteById">
        DELETE FROM user WHERE id = #{id};
        DELETE FROM user_role WHERE userId = #{id};
    </delete>
    <update id="update" parameterType="com.wangjikai.domain.User">
        UPDATE user
        <set>
            <if test="loginname != null">loginname=#{loginname},</if>
            <if test="password != null">password=#{password},</if>
            <if test="username != null">username=#{username},</if>
            <if test="status != null">status=#{status},</if>
        </set>
        WHERE id = #{id};
    </update>
    <select id="selectByPage" parameterType="map" resultMap="getUserRole">
        SELECT
        u.id uId,
        u.loginname,
        u.`password`,
        u.`status`,
        u.createdate,
        u.username,
        ur.id urId,
        ur.userId,
        ur.roleId,
        r.id rId,
        r.roleName,
        r.roleCode,
        r.description
        FROM
        (`user` AS u LEFT JOIN user_role AS ur ON u.id = ur.userId)
        LEFT JOIN role AS r
        ON (ur.roleId = r.id)
        <if test="user != null">
            <where>
                <if test="user.loginname != null and user.loginname != ''">
                    AND u.loginname LIKE CONCAT('%',#{user.loginname},'%')
                </if>
                <if test="user.username != null and user.username != ''">
                    AND u.username LIKE CONCAT('%',#{user.username},'%')
                </if>
                <if test="user.status != null and user.status != ''">
                    AND u.`status` LIKE CONCAT('%',#{user.status},'%')
                </if>
            </where>
        </if>
        ORDER BY u.id,r.id
        <if test="page != null">
            LIMIT #{page.current},#{page.rowCount};
        </if>
    </select>
    <select id="count" parameterType="map" resultType="Integer">
        SELECT COUNT(*) FROM user
        <if test="user != null">
            <where>
                <if test="user.loginname != null and user.loginname != ''">
                    loginname LIKE CONCAT('%',#{user.loginname},'%')
                </if>
                <if test="user.username != null and user.username != ''">
                    AND username LIKE CONCAT('%',#{user.username},'%')
                </if>
                <if test="user.status != null and user.status != ''">
                    AND status LIKE CONCAT('%',#{user.status},'%')
                </if>
            </where>
        </if>
    </select>

    <insert id="insertUser" parameterType="com.wangjikai.domain.User" useGeneratedKeys="true" flushCache="true">
        INSERT INTO user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="loginname != null and loginname != ''">
                loginname,
            </if>
            <if test="password != null and password != ''">
                password,
            </if>
            <if test="status != null and status != ''">
                status,
            </if>
            <if test="username != null and username != ''">
                username,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="loginname != null and loginname != ''">
                #{loginname},
            </if>
            <if test="password != null and password != ''">
                #{password},
            </if>
            <if test="status != null and status != ''">
                #{status},
            </if>
            <if test="username != null and username != ''">
                #{username},
            </if>
        </trim>
    </insert>

    <!--插入中间表-->
    <insert id="insertUserRole" parameterType="com.wangjikai.domain.po.UserRole" useGeneratedKeys="true" flushCache="true">
        INSERT INTO user_role(userId,roleId) VALUES (#{userId},#{roleId});
    </insert>
    <!--根据用户id获取中间表的关联关系-->
    <select id="selectUserRoleRelationByUserId" parameterType="Integer" resultType="Integer">
        SELECT
            user_role.roleId
        FROM
            user_role
        WHERE
            userId = #{id};
    </select>
</mapper>